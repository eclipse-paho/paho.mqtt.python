[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta:__legacy__"

[project]
name = "paho-mqtt"
authors = [
    {name = "Roger Light", email = "roger@atchoo.org"},
]
maintainers = [
  {name = "Roger Light", email = "roger@atchoo.org"}
]
description = "MQTT version 5.0/3.1.1 client class"
version = "1.6.1"
readme = "README.rst"
license = {file = "LICENSE.txt"}
requires-python = ">=3.7"
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Eclipse Public License 2.0 (EPL-2.0)',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Natural Language :: English',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Communications',
    'Topic :: Internet',
]

dependencies = [
]

[project.urls]
homepage = "http://eclipse.org/paho"
documentation = "https://www.eclipse.org/paho/index.php?page=documentation.php"
repository = "https://github.com/eclipse/paho.mqtt.python"
changelog = "https://github.com/eclipse/paho.mqtt.python/blob/master/ChangeLog.txt"

[project.optional-dependencies]
proxy = [
    "PySocks>=1.7",
]
test = [
    'setuptools>=64.0',
    'mock>=5.0',
    'pytest>=7.0',
    'pytest-runner>=6.0',
    'ptr>=22.0',
    'pylama>=8.4',
    'six>=1.16',
    'tox>=4.4',
]

[tool.pylint]
exit-zero = ""
disable = """
    raw-checker-failed,
    bad-inline-option,
    locally-disabled,
    file-ignored,
    suppressed-message,
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead,
"""

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--cov --cov-report html --cov-report term-missing -p no:cacheprovider"
pythonpath = ["src"]
testpaths = [
    "test",
    "tests",
]

[tool.coverage.run]
source = ["src"]
